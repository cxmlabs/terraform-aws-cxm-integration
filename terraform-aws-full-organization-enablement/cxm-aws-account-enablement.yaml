AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  Prefix:
    Type: String
    Default: cxm
    Description: Generic ID to namespace the stacks
  CXMExternalID:
    Type: String
    Description: External ID created for this deployment
    Default: customerid
  CustomerAccountID:
    Type: String
    Description: Account ID of the instance set up for this deployment
  AdminRoleArn:
    Type: String
    Description: ARN of the role to that will be used to read assets from the account
  RoleSuffix:
    Type: String
    Default: ""
    Description: Role name suffix

Resources:
  ################################################################
  #
  # Asset Crawler
  #
  ################################################################
  IAMCrossAccountExecutionRole:
    DependsOn: CloudFormationNotifier
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${Prefix}-asset-crawler${RoleSuffix}'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/ReadOnlyAccess
        - arn:aws:iam::aws:policy/ServiceQuotasFullAccess
        - arn:aws:iam::aws:policy/AWSSavingsPlansFullAccess
      MaxSessionDuration: 43200
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
                - ecs-tasks.amazonaws.com
                - codebuild.amazonaws.com
            Action: sts:AssumeRole
            Condition:
              StringEquals:
                sts:ExternalId: !Sub '${CXMExternalID}'
          - Effect: Allow
            Action:
              - sts:AssumeRole
              - sts:TagSession
            Principal:
              AWS: !Sub '${AdminRoleArn}'
  InventoryPolicy:
    Type: AWS::IAM::Policy
    DependsOn: IAMCrossAccountExecutionRole
    Properties:
      PolicyName: !Sub '${Prefix}-asset-crawler-readonly${RoleSuffix}'
      Roles:
        - !Ref 'IAMCrossAccountExecutionRole'
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Sid: CommitmentManagementPermissions
            Resource: "*"
            Action:
              # DynamoDB Reservations
              - dynamodb:DescribeReservedCapacity
              - dynamodb:DescribeReservedCapacityOfferings
              - dynamodb:PurchaseReservedCapacityOfferings
              # EC2 Reservations
              - ec2:DescribeReserved*
              - ec2:DescribeAvailabilityZones
              - ec2:DescribeAccountAttributes
              - ec2:DescribeRegions
              - ec2:DescribeInstances
              - ec2:DescribeInstanceTypes
              - ec2:DescribeTags
              - ec2:GetReserved*
              - ec2:ModifyReservedInstances
              - ec2:PurchaseReservedInstancesOffering
              - ec2:CreateReservedInstancesListing
              - ec2:CancelReservedInstancesListing
              - ec2:GetReservedInstancesExchangeQuote
              - ec2:AcceptReservedInstancesExchangeQuote
              # RDS Reservations
              - rds:DescribeReserved*
              - rds:ListTagsForResource*
              - rds:PurchaseReservedDBInstancesOffering
              # Redshift Reservations
              - redshift:DescribeReserved*
              - redshift:DescribeTags
              - redshift:GetReserved*
              - redshift:AcceptReservedNodeExchange
              - redshift:PurchaseReservedNodeOffering
              # ElastiCache Reservations
              - elasticache:DescribeReserved*
              - elasticache:ListTagsForResource
              - elasticache:PurchaseReservedCacheNodesOffering
              # ElasticSearch Reservations
              - es:DescribeReserved*
              - es:ListTags
              - es:PurchaseReservedElasticsearchInstanceOffering
              - es:PurchaseReservedInstanceOffering
              # memoryDB
              - memorydb:DescribeReserved*
              - memorydb:ListTags
              - memorydb:PurchaseReservedNodesOffering
              # Saving Plans full management
              - savingsplans:*
          # Explicitly denying data plane API Calls
          - Effect: Deny
            Resource: "*"
            Action:
              - athena:StartCalculationExecution
              - athena:StartQueryExecution
              - dynamodb:GetItem
              - dynamodb:BatchGetItem
              - dynamodb:Query
              - dynamodb:Scan
              - ec2:GetConsoleOutput
              - ec2:GetConsoleScreenshot
              - ecr:BatchGetImage
              - ecr:GetAuthorizationToken
              - ecr:GetDownloadUrlForLayer
              - kinesis:GetRecords
              - kinesis:GetShardIterator
              - lambda:GetFunction
              - logs:GetLogEvents
              - sdb:Select*
              - sqs:ReceiveMessage
              - rds-data:*
  ################################################################
  #
  # Notifications for Feedback Loop
  #
  ################################################################
  IAMCrossAccountNotificationRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${Prefix}-feedback-loop-control-plane${RoleSuffix}'
      MaxSessionDuration: 43200
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: cross-account-event-forwarder
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: "events:PutEvents"
                Resource: !Sub "arn:aws:events:*:${CustomerAccountID}:event-bus/control-plane"

  CloudFormationNotifier:
    Type: AWS::Events::Rule
    DependsOn: IAMCrossAccountNotificationRole
    Properties:
      Description: Notifies when one of our CloudFormation Stack changes state
      EventPattern:
        resources:
          - wildcard: !Sub "*${Prefix}*"
        source:
          - aws.cloudformation
        detail-type:
          - "CloudFormation Stack Status Change"
          - "CloudFormation StackSet StackInstance Status Change"
        detail:
          status-details:
            status: [
              "CREATE_COMPLETE",
              "CREATE_FAILED",
              "DELETE_COMPLETE",
              "DELETE_FAILED",
              "ROLLBACK_COMPLETE",
              "ROLLBACK_FAILED",
              "UPDATE_COMPLETE",
              "UPDATE_FAILED",
              "UPDATE_ROLLBACK_COMPLETE",
              "UPDATE_ROLLBACK_FAILED"
            ]
      State: "ENABLED"
      Targets:
        - Id: CloudFormationNotifier
          Arn: !Sub "arn:aws:events:${AWS::Region}:${CustomerAccountID}:event-bus/control-plane"
          RoleArn: !GetAtt IAMCrossAccountNotificationRole.Arn

Outputs:
  RoleArn:
    Description: ARN of the IAM Role
    Value: !GetAtt 'IAMCrossAccountExecutionRole.Arn'
  RoleId:
    Description: Id of the IAM Role
    Value: !GetAtt 'IAMCrossAccountExecutionRole.RoleId'
